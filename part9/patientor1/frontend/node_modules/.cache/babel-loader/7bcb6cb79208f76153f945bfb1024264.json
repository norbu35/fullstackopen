{"ast":null,"code":"export const reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_PATIENT_LIST':\n      return { ...state,\n        patients: { ...action.payload.reduce((memo, patient) => ({ ...memo,\n            [patient.id]: patient\n          }), {}),\n          ...state.patients\n        }\n      };\n\n    case 'ADD_PATIENT':\n      return { ...state,\n        patients: { ...state.patients,\n          [action.payload.id]: action.payload\n        }\n      };\n\n    case 'UPDATE_PATIENT':\n      return { ...state,\n        patients: { ...state.patients,\n          [action.payload.id]: { ...action.payload,\n            ssn: action.payload.ssn,\n            entries: action.payload.entries\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setPatientList = payload => {\n  return {\n    type: 'SET_PATIENT_LIST',\n    payload: payload\n  };\n};","map":{"version":3,"sources":["/home/norbu/workspace/fullstackopen/part9/patientor1/frontend/src/state/reducer.ts"],"names":["reducer","state","action","type","patients","payload","reduce","memo","patient","id","ssn","entries","setPatientList"],"mappings":"AAiBA,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAeC,MAAf,KAAyC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,QAAQ,EAAE,EACR,GAAGF,MAAM,CAACG,OAAP,CAAeC,MAAf,CACD,CAACC,IAAD,EAAOC,OAAP,MAAoB,EAAE,GAAGD,IAAL;AAAW,aAACC,OAAO,CAACC,EAAT,GAAcD;AAAzB,WAApB,CADC,EAED,EAFC,CADK;AAKR,aAAGP,KAAK,CAACG;AALD;AAFL,OAAP;;AAUF,SAAK,aAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELG,QAAAA,QAAQ,EAAE,EACR,GAAGH,KAAK,CAACG,QADD;AAER,WAACF,MAAM,CAACG,OAAP,CAAeI,EAAhB,GAAqBP,MAAM,CAACG;AAFpB;AAFL,OAAP;;AAOF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,QAAQ,EAAE,EACR,GAAGH,KAAK,CAACG,QADD;AAER,WAACF,MAAM,CAACG,OAAP,CAAeI,EAAhB,GAAqB,EACnB,GAAGP,MAAM,CAACG,OADS;AAEnBK,YAAAA,GAAG,EAAER,MAAM,CAACG,OAAP,CAAeK,GAFD;AAGnBC,YAAAA,OAAO,EAAET,MAAM,CAACG,OAAP,CAAeM;AAHL;AAFb;AAFL,OAAP;;AAWF;AACE,aAAOV,KAAP;AAjCJ;AAmCD,CApCM;;AAsCP,MAAMW,cAAc,GAAIP,OAAD,IAA8B;AACnD,SAAO;AAAEF,IAAAA,IAAI,EAAE,kBAAR;AAA4BE,IAAAA,OAAO,EAAEA;AAArC,GAAP;AACD,CAFD","sourcesContent":["import { State } from './state';\nimport { Patient } from '../types';\n\nexport type Action =\n  | {\n      type: 'SET_PATIENT_LIST';\n      payload: Patient[];\n    }\n  | {\n      type: 'ADD_PATIENT';\n      payload: Patient;\n    }\n  | {\n      type: 'UPDATE_PATIENT';\n      payload: Patient;\n    };\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'SET_PATIENT_LIST':\n      return {\n        ...state,\n        patients: {\n          ...action.payload.reduce(\n            (memo, patient) => ({ ...memo, [patient.id]: patient }),\n            {}\n          ),\n          ...state.patients,\n        },\n      };\n    case 'ADD_PATIENT':\n      return {\n        ...state,\n        patients: {\n          ...state.patients,\n          [action.payload.id]: action.payload,\n        },\n      };\n    case 'UPDATE_PATIENT':\n      return {\n        ...state,\n        patients: {\n          ...state.patients,\n          [action.payload.id]: {\n            ...action.payload,\n            ssn: action.payload.ssn,\n            entries: action.payload.entries,\n          },\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst setPatientList = (payload: Patient): Action => {\n  return { type: 'SET_PATIENT_LIST', payload: payload };\n};\n"]},"metadata":{},"sourceType":"module"}