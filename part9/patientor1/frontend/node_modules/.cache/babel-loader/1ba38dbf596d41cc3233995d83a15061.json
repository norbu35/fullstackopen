{"ast":null,"code":"var _jsxFileName = \"/home/norbu/workspace/fullstackopen/part9/patientor1/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link, Routes, useParams } from 'react-router-dom';\nimport { Button, Divider, Container } from '@material-ui/core';\nimport { apiBaseUrl } from './constants';\nimport { useStateValue } from './state';\nimport PatientListPage from './PatientListPage';\nimport { Typography } from '@material-ui/core';\nimport PatientPage from './PatientPage/PatientPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [, dispatch] = useStateValue();\n  React.useEffect(() => {\n    void axios.get(`${apiBaseUrl}/ping`);\n\n    const fetchPatientList = async () => {\n      try {\n        const {\n          data: patientListFromApi\n        } = await axios.get(`${apiBaseUrl}/patients`);\n        dispatch({\n          type: 'SET_PATIENT_LIST',\n          payload: patientListFromApi\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    void fetchPatientList();\n  }, [dispatch]);\n  const {\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          style: {\n            marginBottom: '0.5em'\n          },\n          children: \"Patientor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          component: Link,\n          to: \"/\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(PatientListPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/patients/:id\",\n            element: /*#__PURE__*/_jsxDEV(PatientPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RhsZwyEVPjrH3R0IUnaRDhicn2c=\", false, function () {\n  return [useStateValue, useParams];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/norbu/workspace/fullstackopen/part9/patientor1/frontend/src/App.tsx"],"names":["React","axios","BrowserRouter","Router","Route","Link","Routes","useParams","Button","Divider","Container","apiBaseUrl","useStateValue","PatientListPage","Typography","PatientPage","App","dispatch","useEffect","get","fetchPatientList","data","patientListFromApi","type","payload","e","console","error","id","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,SALF,QAMO,kBANP;AAOA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,SAA1B,QAA2C,mBAA3C;AAEA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,aAAT,QAA8B,SAA9B;AAGA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,GAAGC,QAAH,IAAeL,aAAa,EAAlC;AACAZ,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpB,SAAKjB,KAAK,CAACkB,GAAN,CAAiB,GAAER,UAAW,OAA9B,CAAL;;AAEA,UAAMS,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAM;AAAEC,UAAAA,IAAI,EAAEC;AAAR,YAA+B,MAAMrB,KAAK,CAACkB,GAAN,CACxC,GAAER,UAAW,WAD2B,CAA3C;AAGAM,QAAAA,QAAQ,CAAC;AAAEM,UAAAA,IAAI,EAAE,kBAAR;AAA4BC,UAAAA,OAAO,EAAEF;AAArC,SAAD,CAAR;AACD,OALD,CAKE,OAAOG,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KATD;;AAUA,SAAKL,gBAAgB,EAArB;AACD,GAdD,EAcG,CAACH,QAAD,CAdH;AAgBA,QAAM;AAAEW,IAAAA;AAAF,MAASrB,SAAS,EAAxB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,SAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,KAAK,EAAE;AAAEsB,YAAAA,YAAY,EAAE;AAAhB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAExB,IAAnB;AAAyB,UAAA,EAAE,EAAC,GAA5B;AAAgC,UAAA,OAAO,EAAC,WAAxC;AAAoD,UAAA,KAAK,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,OAAD;AAAS,UAAA,MAAM;AAAf;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,OAAO,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,eAAZ;AAA4B,YAAA,OAAO,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAvCD;;GAAMW,G;UACiBJ,a,EAiBNL,S;;;KAlBXS,G;AAyCN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Routes,\n  useParams,\n} from 'react-router-dom';\nimport { Button, Divider, Container } from '@material-ui/core';\n\nimport { apiBaseUrl } from './constants';\nimport { useStateValue } from './state';\nimport { Patient } from './types';\n\nimport PatientListPage from './PatientListPage';\nimport { Typography } from '@material-ui/core';\nimport PatientPage from './PatientPage/PatientPage';\n\nconst App = () => {\n  const [, dispatch] = useStateValue();\n  React.useEffect(() => {\n    void axios.get<void>(`${apiBaseUrl}/ping`);\n\n    const fetchPatientList = async () => {\n      try {\n        const { data: patientListFromApi } = await axios.get<Patient[]>(\n          `${apiBaseUrl}/patients`\n        );\n        dispatch({ type: 'SET_PATIENT_LIST', payload: patientListFromApi });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    void fetchPatientList();\n  }, [dispatch]);\n\n  const { id } = useParams<{ id: string }>();\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Container>\n          <Typography variant=\"h3\" style={{ marginBottom: '0.5em' }}>\n            Patientor\n          </Typography>\n          <Button component={Link} to=\"/\" variant=\"contained\" color=\"primary\">\n            Home\n          </Button>\n          <Divider hidden />\n          <Routes>\n            <Route path=\"/\" element={<PatientListPage />} />\n            <Route path=\"/patients/:id\" element={<PatientPage />} />\n          </Routes>\n        </Container>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}