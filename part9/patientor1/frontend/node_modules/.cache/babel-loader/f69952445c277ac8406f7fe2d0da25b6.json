{"ast":null,"code":"var _jsxFileName = \"/home/norbu/workspace/fullstackopen/part9/patientor1/frontend/src/PatientListPage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { Box, Table, Button, TableHead, Typography } from '@material-ui/core';\nimport AddPatientModal from '../AddPatientModal';\nimport { apiBaseUrl } from '../constants';\nimport HealthRatingBar from '../components/HealthRatingBar';\nimport { useStateValue } from '../state';\nimport { TableCell } from '@material-ui/core';\nimport { TableRow } from '@material-ui/core';\nimport { TableBody } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PatientListPage = () => {\n  _s();\n\n  const [{\n    patients\n  }, dispatch] = useStateValue();\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [error, setError] = React.useState();\n\n  const openModal = () => setModalOpen(true);\n\n  const closeModal = () => {\n    setModalOpen(false);\n    setError(undefined);\n  };\n\n  const submitNewPatient = async values => {\n    try {\n      const {\n        data: newPatient\n      } = await axios.post(`${apiBaseUrl}/patients`, values);\n      dispatch({\n        type: 'ADD_PATIENT',\n        payload: newPatient\n      });\n      closeModal();\n    } catch (e) {\n      if (axios.isAxiosError(e)) {\n        var _e$response, _e$response2, _e$response2$data;\n\n        console.error((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data) || 'Unrecognized axios error');\n        setError(String(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.error) || 'Unrecognized axios error');\n      } else {\n        console.error('Unknown error', e);\n        setError('Unknown error');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        variant: \"h6\",\n        children: \"Patient list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      style: {\n        marginBottom: '1em'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Occupation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Health Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: Object.values(patients).map(patient => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/patients/${patient.id}`,\n              children: patient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: patient.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: patient.occupation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(HealthRatingBar, {\n              showText: false,\n              rating: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, patient.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPatientModal, {\n      modalOpen: modalOpen,\n      onSubmit: submitNewPatient,\n      error: error,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => openModal(),\n      children: \"Add New Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PatientListPage, \"sFdFEyjswPcHtYxff3i7gIc9rwM=\", false, function () {\n  return [useStateValue];\n});\n\n_c = PatientListPage;\nexport default PatientListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientListPage\");","map":{"version":3,"sources":["/home/norbu/workspace/fullstackopen/part9/patientor1/frontend/src/PatientListPage/index.tsx"],"names":["React","axios","Box","Table","Button","TableHead","Typography","AddPatientModal","apiBaseUrl","HealthRatingBar","useStateValue","TableCell","TableRow","TableBody","Link","PatientListPage","patients","dispatch","modalOpen","setModalOpen","useState","error","setError","openModal","closeModal","undefined","submitNewPatient","values","data","newPatient","post","type","payload","e","isAxiosError","console","response","String","marginBottom","Object","map","patient","id","name","gender","occupation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Box, Table, Button, TableHead, Typography } from '@material-ui/core';\n\nimport { PatientFormValues } from '../AddPatientModal/AddPatientForm';\nimport AddPatientModal from '../AddPatientModal';\nimport { Patient } from '../types';\nimport { apiBaseUrl } from '../constants';\nimport HealthRatingBar from '../components/HealthRatingBar';\nimport { useStateValue } from '../state';\nimport { TableCell } from '@material-ui/core';\nimport { TableRow } from '@material-ui/core';\nimport { TableBody } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst PatientListPage = () => {\n  const [{ patients }, dispatch] = useStateValue();\n\n  const [modalOpen, setModalOpen] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<string | undefined>();\n\n  const openModal = (): void => setModalOpen(true);\n\n  const closeModal = (): void => {\n    setModalOpen(false);\n    setError(undefined);\n  };\n\n  const submitNewPatient = async (values: PatientFormValues) => {\n    try {\n      const { data: newPatient } = await axios.post<Patient>(\n        `${apiBaseUrl}/patients`,\n        values\n      );\n      dispatch({ type: 'ADD_PATIENT', payload: newPatient });\n      closeModal();\n    } catch (e: unknown) {\n      if (axios.isAxiosError(e)) {\n        console.error(e?.response?.data || 'Unrecognized axios error');\n        setError(\n          String(e?.response?.data?.error) || 'Unrecognized axios error'\n        );\n      } else {\n        console.error('Unknown error', e);\n        setError('Unknown error');\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Box>\n        <Typography align=\"center\" variant=\"h6\">\n          Patient list\n        </Typography>\n      </Box>\n      <Table style={{ marginBottom: '1em' }}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Gender</TableCell>\n            <TableCell>Occupation</TableCell>\n            <TableCell>Health Rating</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Object.values(patients).map((patient: Patient) => (\n            <TableRow key={patient.id}>\n              <TableCell>\n                <Link to={`/patients/${patient.id}`}>{patient.name}</Link>\n              </TableCell>\n              <TableCell>{patient.gender}</TableCell>\n              <TableCell>{patient.occupation}</TableCell>\n              <TableCell>\n                <HealthRatingBar showText={false} rating={1} />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <AddPatientModal\n        modalOpen={modalOpen}\n        onSubmit={submitNewPatient}\n        error={error}\n        onClose={closeModal}\n      />\n      <Button variant=\"contained\" onClick={() => openModal()}>\n        Add New Patient\n      </Button>\n    </div>\n  );\n};\n\nexport default PatientListPage;\n"]},"metadata":{},"sourceType":"module"}