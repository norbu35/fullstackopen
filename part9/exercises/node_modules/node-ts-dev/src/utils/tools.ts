const jsonwebtoken = require("./jwt");
const nodemailer = require('nodemailer');
const log = require("./log");

const map = new Map()

/**
 * 记录错误日志
 * @param {*} obj 
 */
const Log = (obj: any) => {
    log.error(obj);
}

/**
 * 将JSON字符串转化为正常得到数据
 * @param {String} jsonString JSON字符串
 * @returns 数据对象
 */
const jsonConversionObject = (jsonString: string) => JSON.parse(JSON.stringify(jsonString))


/**
 * 获取当前用户的UID 
 * @param {Request} req 请求体 
 */
const getUId = (req: { headers: { token: string; }; }) => jsonwebtoken.decode(req.headers.token);


/**
 * 获取一个六位的数字验证码并添加到内存
 * @param {Request} req 请求体
 * @param {String} userName 账号
 * @returns 验证码
 */
const getSixNumberCode = (req: { ip: string; }, userName: string) => {
    const code = Math.floor(Math.random() * (999999 - 100000) + 100000);
    map.set(req.ip, { code, timer: +new Date(), userName });
    console.log(map);
    return code;
}

/**
 * 判断验证码时候合格
 * @param {String} userName 账号
 * @param {String} coded 验证码
 * @param {Request} req 请求体
 */
const isAuthCode = (userNames: string, coded: string, req: { ip: any; }) => {
    const { code, timer, userName } = map.get(req.ip) ? map.get(req.ip) : new Error("验证码错误！");
    if (code == coded && userName == userNames && (+new Date() - timer) <= 300000) {
        map.delete(req.ip);
        return true;
    }
    if (code != coded) {
        throw new Error("验证码错误！");
    }
    if (userName != userNames) {
        throw new Error("验证码与账号不符！");
    }
    if ((+new Date() - timer) > 300000) {
        throw new Error("验证码已失效！");
    }
}

/**
 * 在指定邮箱发送一个验证码
 * @param {*} email 邮箱
 * @param {*} code 验证码
 */
const sendEmailCode = async (email: string, code: string) => {
    let transporter = nodemailer.createTransport({
        host: 'smtp.163.com',
        port: 465,
        secure: true,
        auth: {
            user: '17633317268@163.com', //邮箱的账号
            pass: 'XPVYHIDHTPDCRBJL'//邮箱的密码
        }
    });
    let mailOptions = {
        from: 'CMBG后台管理系统 <17633317268@163.com>',
        to: `${email}`,
        subject: '登录验证',
        text: '您好尊敬的用户，欢迎使用本系统。',
        html: `
            <p>您好尊敬的用户，欢迎使用本系统。</p>
            <h5>验证码</h5>
            <h2 style='color:red'>${code}</h2>
            <p>验证码在5分钟内有效，请注意使用！</p>
        `
    };
    transporter.sendMail(mailOptions, (error: any, info: { messageId: any; response: any; }) => {
        if (error) {
            return console.log(error);
        }
        console.log('Message %s sent: %s', info.messageId, info.response);
    });
}

module.exports = {
    jsonConversionObject,
    getUId,
    getSixNumberCode,
    sendEmailCode,
    isAuthCode,
    Log
}

